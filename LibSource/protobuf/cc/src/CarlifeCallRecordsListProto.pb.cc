// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CarlifeCallRecordsListProto.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "CarlifeCallRecordsListProto.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace baidu {
namespace carlife {
namespace protobuf {

namespace {

const ::google::protobuf::Descriptor* CarlifeCallRecordsList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CarlifeCallRecordsList_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_CarlifeCallRecordsListProto_2eproto() {
  protobuf_AddDesc_CarlifeCallRecordsListProto_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "CarlifeCallRecordsListProto.proto");
  GOOGLE_CHECK(file != NULL);
  CarlifeCallRecordsList_descriptor_ = file->message_type(0);
  static const int CarlifeCallRecordsList_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CarlifeCallRecordsList, cnt_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CarlifeCallRecordsList, carlifecallrecords_),
  };
  CarlifeCallRecordsList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CarlifeCallRecordsList_descriptor_,
      CarlifeCallRecordsList::default_instance_,
      CarlifeCallRecordsList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CarlifeCallRecordsList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CarlifeCallRecordsList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CarlifeCallRecordsList));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_CarlifeCallRecordsListProto_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CarlifeCallRecordsList_descriptor_, &CarlifeCallRecordsList::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_CarlifeCallRecordsListProto_2eproto() {
  delete CarlifeCallRecordsList::default_instance_;
  delete CarlifeCallRecordsList_reflection_;
}

void protobuf_AddDesc_CarlifeCallRecordsListProto_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::com::baidu::carlife::protobuf::protobuf_AddDesc_CarlifeCallRecordsProto_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n!CarlifeCallRecordsListProto.proto\022\032com"
    ".baidu.carlife.protobuf\032\035CarlifeCallReco"
    "rdsProto.proto\"q\n\026CarlifeCallRecordsList"
    "\022\013\n\003cnt\030\001 \002(\005\022J\n\022carlifeCallRecords\030\002 \003("
    "\0132..com.baidu.carlife.protobuf.CarlifeCa"
    "llRecords", 209);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "CarlifeCallRecordsListProto.proto", &protobuf_RegisterTypes);
  CarlifeCallRecordsList::default_instance_ = new CarlifeCallRecordsList();
  CarlifeCallRecordsList::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_CarlifeCallRecordsListProto_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_CarlifeCallRecordsListProto_2eproto {
  StaticDescriptorInitializer_CarlifeCallRecordsListProto_2eproto() {
    protobuf_AddDesc_CarlifeCallRecordsListProto_2eproto();
  }
} static_descriptor_initializer_CarlifeCallRecordsListProto_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int CarlifeCallRecordsList::kCntFieldNumber;
const int CarlifeCallRecordsList::kCarlifeCallRecordsFieldNumber;
#endif  // !_MSC_VER

CarlifeCallRecordsList::CarlifeCallRecordsList()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CarlifeCallRecordsList::InitAsDefaultInstance() {
}

CarlifeCallRecordsList::CarlifeCallRecordsList(const CarlifeCallRecordsList& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CarlifeCallRecordsList::SharedCtor() {
  _cached_size_ = 0;
  cnt_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CarlifeCallRecordsList::~CarlifeCallRecordsList() {
  SharedDtor();
}

void CarlifeCallRecordsList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CarlifeCallRecordsList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CarlifeCallRecordsList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CarlifeCallRecordsList_descriptor_;
}

const CarlifeCallRecordsList& CarlifeCallRecordsList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CarlifeCallRecordsListProto_2eproto();
  return *default_instance_;
}

CarlifeCallRecordsList* CarlifeCallRecordsList::default_instance_ = NULL;

CarlifeCallRecordsList* CarlifeCallRecordsList::New() const {
  return new CarlifeCallRecordsList;
}

void CarlifeCallRecordsList::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    cnt_ = 0;
  }
  carlifecallrecords_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CarlifeCallRecordsList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 cnt = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cnt_)));
          set_has_cnt();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_carlifeCallRecords;
        break;
      }

      // repeated .com.baidu.carlife.protobuf.CarlifeCallRecords carlifeCallRecords = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_carlifeCallRecords:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_carlifecallrecords()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_carlifeCallRecords;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CarlifeCallRecordsList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 cnt = 1;
  if (has_cnt()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->cnt(), output);
  }

  // repeated .com.baidu.carlife.protobuf.CarlifeCallRecords carlifeCallRecords = 2;
  for (int i = 0; i < this->carlifecallrecords_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->carlifecallrecords(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CarlifeCallRecordsList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 cnt = 1;
  if (has_cnt()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->cnt(), target);
  }

  // repeated .com.baidu.carlife.protobuf.CarlifeCallRecords carlifeCallRecords = 2;
  for (int i = 0; i < this->carlifecallrecords_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->carlifecallrecords(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CarlifeCallRecordsList::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 cnt = 1;
    if (has_cnt()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cnt());
    }

  }
  // repeated .com.baidu.carlife.protobuf.CarlifeCallRecords carlifeCallRecords = 2;
  total_size += 1 * this->carlifecallrecords_size();
  for (int i = 0; i < this->carlifecallrecords_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->carlifecallrecords(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CarlifeCallRecordsList::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CarlifeCallRecordsList* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CarlifeCallRecordsList*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CarlifeCallRecordsList::MergeFrom(const CarlifeCallRecordsList& from) {
  GOOGLE_CHECK_NE(&from, this);
  carlifecallrecords_.MergeFrom(from.carlifecallrecords_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cnt()) {
      set_cnt(from.cnt());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CarlifeCallRecordsList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CarlifeCallRecordsList::CopyFrom(const CarlifeCallRecordsList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CarlifeCallRecordsList::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  for (int i = 0; i < carlifecallrecords_size(); i++) {
    if (!this->carlifecallrecords(i).IsInitialized()) return false;
  }
  return true;
}

void CarlifeCallRecordsList::Swap(CarlifeCallRecordsList* other) {
  if (other != this) {
    std::swap(cnt_, other->cnt_);
    carlifecallrecords_.Swap(&other->carlifecallrecords_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CarlifeCallRecordsList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CarlifeCallRecordsList_descriptor_;
  metadata.reflection = CarlifeCallRecordsList_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace protobuf
}  // namespace carlife
}  // namespace baidu
}  // namespace com

// @@protoc_insertion_point(global_scope)
