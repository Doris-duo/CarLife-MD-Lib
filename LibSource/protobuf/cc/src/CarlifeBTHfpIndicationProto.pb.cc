// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CarlifeBTHfpIndicationProto.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "CarlifeBTHfpIndicationProto.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace baidu {
namespace carlife {
namespace protobuf {

namespace {

const ::google::protobuf::Descriptor* CarlifeBTHfpIndication_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CarlifeBTHfpIndication_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_CarlifeBTHfpIndicationProto_2eproto() {
  protobuf_AddDesc_CarlifeBTHfpIndicationProto_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "CarlifeBTHfpIndicationProto.proto");
  GOOGLE_CHECK(file != NULL);
  CarlifeBTHfpIndication_descriptor_ = file->message_type(0);
  static const int CarlifeBTHfpIndication_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CarlifeBTHfpIndication, state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CarlifeBTHfpIndication, phonenum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CarlifeBTHfpIndication, phonename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CarlifeBTHfpIndication, address_),
  };
  CarlifeBTHfpIndication_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CarlifeBTHfpIndication_descriptor_,
      CarlifeBTHfpIndication::default_instance_,
      CarlifeBTHfpIndication_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CarlifeBTHfpIndication, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CarlifeBTHfpIndication, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CarlifeBTHfpIndication));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_CarlifeBTHfpIndicationProto_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CarlifeBTHfpIndication_descriptor_, &CarlifeBTHfpIndication::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_CarlifeBTHfpIndicationProto_2eproto() {
  delete CarlifeBTHfpIndication::default_instance_;
  delete CarlifeBTHfpIndication_reflection_;
}

void protobuf_AddDesc_CarlifeBTHfpIndicationProto_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n!CarlifeBTHfpIndicationProto.proto\022\032com"
    ".baidu.carlife.protobuf\"]\n\026CarlifeBTHfpI"
    "ndication\022\r\n\005state\030\001 \002(\005\022\020\n\010phoneNum\030\002 \001"
    "(\t\022\021\n\tphoneName\030\003 \001(\t\022\017\n\007address\030\004 \001(\t", 158);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "CarlifeBTHfpIndicationProto.proto", &protobuf_RegisterTypes);
  CarlifeBTHfpIndication::default_instance_ = new CarlifeBTHfpIndication();
  CarlifeBTHfpIndication::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_CarlifeBTHfpIndicationProto_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_CarlifeBTHfpIndicationProto_2eproto {
  StaticDescriptorInitializer_CarlifeBTHfpIndicationProto_2eproto() {
    protobuf_AddDesc_CarlifeBTHfpIndicationProto_2eproto();
  }
} static_descriptor_initializer_CarlifeBTHfpIndicationProto_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int CarlifeBTHfpIndication::kStateFieldNumber;
const int CarlifeBTHfpIndication::kPhoneNumFieldNumber;
const int CarlifeBTHfpIndication::kPhoneNameFieldNumber;
const int CarlifeBTHfpIndication::kAddressFieldNumber;
#endif  // !_MSC_VER

CarlifeBTHfpIndication::CarlifeBTHfpIndication()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CarlifeBTHfpIndication::InitAsDefaultInstance() {
}

CarlifeBTHfpIndication::CarlifeBTHfpIndication(const CarlifeBTHfpIndication& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CarlifeBTHfpIndication::SharedCtor() {
  _cached_size_ = 0;
  state_ = 0;
  phonenum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  phonename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  address_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CarlifeBTHfpIndication::~CarlifeBTHfpIndication() {
  SharedDtor();
}

void CarlifeBTHfpIndication::SharedDtor() {
  if (phonenum_ != &::google::protobuf::internal::kEmptyString) {
    delete phonenum_;
  }
  if (phonename_ != &::google::protobuf::internal::kEmptyString) {
    delete phonename_;
  }
  if (address_ != &::google::protobuf::internal::kEmptyString) {
    delete address_;
  }
  if (this != default_instance_) {
  }
}

void CarlifeBTHfpIndication::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CarlifeBTHfpIndication::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CarlifeBTHfpIndication_descriptor_;
}

const CarlifeBTHfpIndication& CarlifeBTHfpIndication::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CarlifeBTHfpIndicationProto_2eproto();
  return *default_instance_;
}

CarlifeBTHfpIndication* CarlifeBTHfpIndication::default_instance_ = NULL;

CarlifeBTHfpIndication* CarlifeBTHfpIndication::New() const {
  return new CarlifeBTHfpIndication;
}

void CarlifeBTHfpIndication::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    state_ = 0;
    if (has_phonenum()) {
      if (phonenum_ != &::google::protobuf::internal::kEmptyString) {
        phonenum_->clear();
      }
    }
    if (has_phonename()) {
      if (phonename_ != &::google::protobuf::internal::kEmptyString) {
        phonename_->clear();
      }
    }
    if (has_address()) {
      if (address_ != &::google::protobuf::internal::kEmptyString) {
        address_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CarlifeBTHfpIndication::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 state = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
          set_has_state();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_phoneNum;
        break;
      }

      // optional string phoneNum = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_phoneNum:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phonenum()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->phonenum().data(), this->phonenum().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_phoneName;
        break;
      }

      // optional string phoneName = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_phoneName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phonename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->phonename().data(), this->phonename().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_address;
        break;
      }

      // optional string address = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_address:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->address().data(), this->address().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CarlifeBTHfpIndication::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 state = 1;
  if (has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->state(), output);
  }

  // optional string phoneNum = 2;
  if (has_phonenum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->phonenum().data(), this->phonenum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->phonenum(), output);
  }

  // optional string phoneName = 3;
  if (has_phonename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->phonename().data(), this->phonename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->phonename(), output);
  }

  // optional string address = 4;
  if (has_address()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->address().data(), this->address().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->address(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CarlifeBTHfpIndication::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 state = 1;
  if (has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->state(), target);
  }

  // optional string phoneNum = 2;
  if (has_phonenum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->phonenum().data(), this->phonenum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->phonenum(), target);
  }

  // optional string phoneName = 3;
  if (has_phonename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->phonename().data(), this->phonename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->phonename(), target);
  }

  // optional string address = 4;
  if (has_address()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->address().data(), this->address().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->address(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CarlifeBTHfpIndication::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 state = 1;
    if (has_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->state());
    }

    // optional string phoneNum = 2;
    if (has_phonenum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->phonenum());
    }

    // optional string phoneName = 3;
    if (has_phonename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->phonename());
    }

    // optional string address = 4;
    if (has_address()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->address());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CarlifeBTHfpIndication::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CarlifeBTHfpIndication* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CarlifeBTHfpIndication*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CarlifeBTHfpIndication::MergeFrom(const CarlifeBTHfpIndication& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_state()) {
      set_state(from.state());
    }
    if (from.has_phonenum()) {
      set_phonenum(from.phonenum());
    }
    if (from.has_phonename()) {
      set_phonename(from.phonename());
    }
    if (from.has_address()) {
      set_address(from.address());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CarlifeBTHfpIndication::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CarlifeBTHfpIndication::CopyFrom(const CarlifeBTHfpIndication& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CarlifeBTHfpIndication::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void CarlifeBTHfpIndication::Swap(CarlifeBTHfpIndication* other) {
  if (other != this) {
    std::swap(state_, other->state_);
    std::swap(phonenum_, other->phonenum_);
    std::swap(phonename_, other->phonename_);
    std::swap(address_, other->address_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CarlifeBTHfpIndication::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CarlifeBTHfpIndication_descriptor_;
  metadata.reflection = CarlifeBTHfpIndication_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace protobuf
}  // namespace carlife
}  // namespace baidu
}  // namespace com

// @@protoc_insertion_point(global_scope)
