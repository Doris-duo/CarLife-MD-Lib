// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CarlifeCallRecordsProto.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "CarlifeCallRecordsProto.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace baidu {
namespace carlife {
namespace protobuf {

namespace {

const ::google::protobuf::Descriptor* CarlifeCallRecords_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CarlifeCallRecords_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* CarlifeCallRecords_CallRecordsType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_CarlifeCallRecordsProto_2eproto() {
  protobuf_AddDesc_CarlifeCallRecordsProto_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "CarlifeCallRecordsProto.proto");
  GOOGLE_CHECK(file != NULL);
  CarlifeCallRecords_descriptor_ = file->message_type(0);
  static const int CarlifeCallRecords_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CarlifeCallRecords, cid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CarlifeCallRecords, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CarlifeCallRecords, number_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CarlifeCallRecords, duration_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CarlifeCallRecords, time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CarlifeCallRecords, type_),
  };
  CarlifeCallRecords_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CarlifeCallRecords_descriptor_,
      CarlifeCallRecords::default_instance_,
      CarlifeCallRecords_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CarlifeCallRecords, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CarlifeCallRecords, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CarlifeCallRecords));
  CarlifeCallRecords_CallRecordsType_descriptor_ = CarlifeCallRecords_descriptor_->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_CarlifeCallRecordsProto_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CarlifeCallRecords_descriptor_, &CarlifeCallRecords::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_CarlifeCallRecordsProto_2eproto() {
  delete CarlifeCallRecords::default_instance_;
  delete CarlifeCallRecords_reflection_;
}

void protobuf_AddDesc_CarlifeCallRecordsProto_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\035CarlifeCallRecordsProto.proto\022\032com.bai"
    "du.carlife.protobuf\"\227\002\n\022CarlifeCallRecor"
    "ds\022\013\n\003cid\030\001 \002(\005\022\014\n\004name\030\002 \002(\t\022\016\n\006number\030"
    "\003 \002(\t\022\020\n\010duration\030\004 \002(\t\022\014\n\004time\030\005 \002(\t\022Z\n"
    "\004type\030\006 \002(\0162>.com.baidu.carlife.protobuf"
    ".CarlifeCallRecords.CallRecordsType:\014DEF"
    "AULT_TYPE\"Z\n\017CallRecordsType\022\020\n\014DEFAULT_"
    "TYPE\020\000\022\021\n\rINCOMING_TYPE\020\001\022\021\n\rOUTGOING_TY"
    "PE\020\002\022\017\n\013MISSED_TYPE\020\003", 341);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "CarlifeCallRecordsProto.proto", &protobuf_RegisterTypes);
  CarlifeCallRecords::default_instance_ = new CarlifeCallRecords();
  CarlifeCallRecords::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_CarlifeCallRecordsProto_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_CarlifeCallRecordsProto_2eproto {
  StaticDescriptorInitializer_CarlifeCallRecordsProto_2eproto() {
    protobuf_AddDesc_CarlifeCallRecordsProto_2eproto();
  }
} static_descriptor_initializer_CarlifeCallRecordsProto_2eproto_;

// ===================================================================

const ::google::protobuf::EnumDescriptor* CarlifeCallRecords_CallRecordsType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CarlifeCallRecords_CallRecordsType_descriptor_;
}
bool CarlifeCallRecords_CallRecordsType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const CarlifeCallRecords_CallRecordsType CarlifeCallRecords::DEFAULT_TYPE;
const CarlifeCallRecords_CallRecordsType CarlifeCallRecords::INCOMING_TYPE;
const CarlifeCallRecords_CallRecordsType CarlifeCallRecords::OUTGOING_TYPE;
const CarlifeCallRecords_CallRecordsType CarlifeCallRecords::MISSED_TYPE;
const CarlifeCallRecords_CallRecordsType CarlifeCallRecords::CallRecordsType_MIN;
const CarlifeCallRecords_CallRecordsType CarlifeCallRecords::CallRecordsType_MAX;
const int CarlifeCallRecords::CallRecordsType_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int CarlifeCallRecords::kCidFieldNumber;
const int CarlifeCallRecords::kNameFieldNumber;
const int CarlifeCallRecords::kNumberFieldNumber;
const int CarlifeCallRecords::kDurationFieldNumber;
const int CarlifeCallRecords::kTimeFieldNumber;
const int CarlifeCallRecords::kTypeFieldNumber;
#endif  // !_MSC_VER

CarlifeCallRecords::CarlifeCallRecords()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CarlifeCallRecords::InitAsDefaultInstance() {
}

CarlifeCallRecords::CarlifeCallRecords(const CarlifeCallRecords& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CarlifeCallRecords::SharedCtor() {
  _cached_size_ = 0;
  cid_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  number_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  duration_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  time_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CarlifeCallRecords::~CarlifeCallRecords() {
  SharedDtor();
}

void CarlifeCallRecords::SharedDtor() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (number_ != &::google::protobuf::internal::kEmptyString) {
    delete number_;
  }
  if (duration_ != &::google::protobuf::internal::kEmptyString) {
    delete duration_;
  }
  if (time_ != &::google::protobuf::internal::kEmptyString) {
    delete time_;
  }
  if (this != default_instance_) {
  }
}

void CarlifeCallRecords::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CarlifeCallRecords::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CarlifeCallRecords_descriptor_;
}

const CarlifeCallRecords& CarlifeCallRecords::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CarlifeCallRecordsProto_2eproto();
  return *default_instance_;
}

CarlifeCallRecords* CarlifeCallRecords::default_instance_ = NULL;

CarlifeCallRecords* CarlifeCallRecords::New() const {
  return new CarlifeCallRecords;
}

void CarlifeCallRecords::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    cid_ = 0;
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
    if (has_number()) {
      if (number_ != &::google::protobuf::internal::kEmptyString) {
        number_->clear();
      }
    }
    if (has_duration()) {
      if (duration_ != &::google::protobuf::internal::kEmptyString) {
        duration_->clear();
      }
    }
    if (has_time()) {
      if (time_ != &::google::protobuf::internal::kEmptyString) {
        time_->clear();
      }
    }
    type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CarlifeCallRecords::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 cid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cid_)));
          set_has_cid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // required string name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_number;
        break;
      }

      // required string number = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_number:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_number()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->number().data(), this->number().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_duration;
        break;
      }

      // required string duration = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_duration:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_duration()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->duration().data(), this->duration().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_time;
        break;
      }

      // required string time = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_time:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_time()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->time().data(), this->time().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_type;
        break;
      }

      // required .com.baidu.carlife.protobuf.CarlifeCallRecords.CallRecordsType type = 6 [default = DEFAULT_TYPE];
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::com::baidu::carlife::protobuf::CarlifeCallRecords_CallRecordsType_IsValid(value)) {
            set_type(static_cast< ::com::baidu::carlife::protobuf::CarlifeCallRecords_CallRecordsType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(6, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CarlifeCallRecords::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 cid = 1;
  if (has_cid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->cid(), output);
  }

  // required string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->name(), output);
  }

  // required string number = 3;
  if (has_number()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->number().data(), this->number().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->number(), output);
  }

  // required string duration = 4;
  if (has_duration()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->duration().data(), this->duration().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->duration(), output);
  }

  // required string time = 5;
  if (has_time()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->time().data(), this->time().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->time(), output);
  }

  // required .com.baidu.carlife.protobuf.CarlifeCallRecords.CallRecordsType type = 6 [default = DEFAULT_TYPE];
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CarlifeCallRecords::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 cid = 1;
  if (has_cid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->cid(), target);
  }

  // required string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // required string number = 3;
  if (has_number()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->number().data(), this->number().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->number(), target);
  }

  // required string duration = 4;
  if (has_duration()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->duration().data(), this->duration().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->duration(), target);
  }

  // required string time = 5;
  if (has_time()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->time().data(), this->time().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->time(), target);
  }

  // required .com.baidu.carlife.protobuf.CarlifeCallRecords.CallRecordsType type = 6 [default = DEFAULT_TYPE];
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CarlifeCallRecords::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 cid = 1;
    if (has_cid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cid());
    }

    // required string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // required string number = 3;
    if (has_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->number());
    }

    // required string duration = 4;
    if (has_duration()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->duration());
    }

    // required string time = 5;
    if (has_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->time());
    }

    // required .com.baidu.carlife.protobuf.CarlifeCallRecords.CallRecordsType type = 6 [default = DEFAULT_TYPE];
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CarlifeCallRecords::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CarlifeCallRecords* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CarlifeCallRecords*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CarlifeCallRecords::MergeFrom(const CarlifeCallRecords& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cid()) {
      set_cid(from.cid());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_number()) {
      set_number(from.number());
    }
    if (from.has_duration()) {
      set_duration(from.duration());
    }
    if (from.has_time()) {
      set_time(from.time());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CarlifeCallRecords::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CarlifeCallRecords::CopyFrom(const CarlifeCallRecords& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CarlifeCallRecords::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003f) != 0x0000003f) return false;

  return true;
}

void CarlifeCallRecords::Swap(CarlifeCallRecords* other) {
  if (other != this) {
    std::swap(cid_, other->cid_);
    std::swap(name_, other->name_);
    std::swap(number_, other->number_);
    std::swap(duration_, other->duration_);
    std::swap(time_, other->time_);
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CarlifeCallRecords::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CarlifeCallRecords_descriptor_;
  metadata.reflection = CarlifeCallRecords_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace protobuf
}  // namespace carlife
}  // namespace baidu
}  // namespace com

// @@protoc_insertion_point(global_scope)
