// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CarlifeTouchFlingProto.proto

#ifndef PROTOBUF_CarlifeTouchFlingProto_2eproto__INCLUDED
#define PROTOBUF_CarlifeTouchFlingProto_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace baidu {
namespace carlife {
namespace protobuf {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_CarlifeTouchFlingProto_2eproto();
void protobuf_AssignDesc_CarlifeTouchFlingProto_2eproto();
void protobuf_ShutdownFile_CarlifeTouchFlingProto_2eproto();

class CarlifeTouchFling;

// ===================================================================

class CarlifeTouchFling : public ::google::protobuf::Message {
 public:
  CarlifeTouchFling();
  virtual ~CarlifeTouchFling();

  CarlifeTouchFling(const CarlifeTouchFling& from);

  inline CarlifeTouchFling& operator=(const CarlifeTouchFling& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CarlifeTouchFling& default_instance();

  void Swap(CarlifeTouchFling* other);

  // implements Message ----------------------------------------------

  CarlifeTouchFling* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CarlifeTouchFling& from);
  void MergeFrom(const CarlifeTouchFling& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 x1 = 1;
  inline bool has_x1() const;
  inline void clear_x1();
  static const int kX1FieldNumber = 1;
  inline ::google::protobuf::int32 x1() const;
  inline void set_x1(::google::protobuf::int32 value);

  // required int32 y1 = 2;
  inline bool has_y1() const;
  inline void clear_y1();
  static const int kY1FieldNumber = 2;
  inline ::google::protobuf::int32 y1() const;
  inline void set_y1(::google::protobuf::int32 value);

  // required int32 x2 = 3;
  inline bool has_x2() const;
  inline void clear_x2();
  static const int kX2FieldNumber = 3;
  inline ::google::protobuf::int32 x2() const;
  inline void set_x2(::google::protobuf::int32 value);

  // required int32 y2 = 4;
  inline bool has_y2() const;
  inline void clear_y2();
  static const int kY2FieldNumber = 4;
  inline ::google::protobuf::int32 y2() const;
  inline void set_y2(::google::protobuf::int32 value);

  // required float velocityX = 5;
  inline bool has_velocityx() const;
  inline void clear_velocityx();
  static const int kVelocityXFieldNumber = 5;
  inline float velocityx() const;
  inline void set_velocityx(float value);

  // required float velocityY = 6;
  inline bool has_velocityy() const;
  inline void clear_velocityy();
  static const int kVelocityYFieldNumber = 6;
  inline float velocityy() const;
  inline void set_velocityy(float value);

  // @@protoc_insertion_point(class_scope:com.baidu.carlife.protobuf.CarlifeTouchFling)
 private:
  inline void set_has_x1();
  inline void clear_has_x1();
  inline void set_has_y1();
  inline void clear_has_y1();
  inline void set_has_x2();
  inline void clear_has_x2();
  inline void set_has_y2();
  inline void clear_has_y2();
  inline void set_has_velocityx();
  inline void clear_has_velocityx();
  inline void set_has_velocityy();
  inline void clear_has_velocityy();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 x1_;
  ::google::protobuf::int32 y1_;
  ::google::protobuf::int32 x2_;
  ::google::protobuf::int32 y2_;
  float velocityx_;
  float velocityy_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_CarlifeTouchFlingProto_2eproto();
  friend void protobuf_AssignDesc_CarlifeTouchFlingProto_2eproto();
  friend void protobuf_ShutdownFile_CarlifeTouchFlingProto_2eproto();

  void InitAsDefaultInstance();
  static CarlifeTouchFling* default_instance_;
};
// ===================================================================


// ===================================================================

// CarlifeTouchFling

// required int32 x1 = 1;
inline bool CarlifeTouchFling::has_x1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CarlifeTouchFling::set_has_x1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CarlifeTouchFling::clear_has_x1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CarlifeTouchFling::clear_x1() {
  x1_ = 0;
  clear_has_x1();
}
inline ::google::protobuf::int32 CarlifeTouchFling::x1() const {
  return x1_;
}
inline void CarlifeTouchFling::set_x1(::google::protobuf::int32 value) {
  set_has_x1();
  x1_ = value;
}

// required int32 y1 = 2;
inline bool CarlifeTouchFling::has_y1() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CarlifeTouchFling::set_has_y1() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CarlifeTouchFling::clear_has_y1() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CarlifeTouchFling::clear_y1() {
  y1_ = 0;
  clear_has_y1();
}
inline ::google::protobuf::int32 CarlifeTouchFling::y1() const {
  return y1_;
}
inline void CarlifeTouchFling::set_y1(::google::protobuf::int32 value) {
  set_has_y1();
  y1_ = value;
}

// required int32 x2 = 3;
inline bool CarlifeTouchFling::has_x2() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CarlifeTouchFling::set_has_x2() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CarlifeTouchFling::clear_has_x2() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CarlifeTouchFling::clear_x2() {
  x2_ = 0;
  clear_has_x2();
}
inline ::google::protobuf::int32 CarlifeTouchFling::x2() const {
  return x2_;
}
inline void CarlifeTouchFling::set_x2(::google::protobuf::int32 value) {
  set_has_x2();
  x2_ = value;
}

// required int32 y2 = 4;
inline bool CarlifeTouchFling::has_y2() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CarlifeTouchFling::set_has_y2() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CarlifeTouchFling::clear_has_y2() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CarlifeTouchFling::clear_y2() {
  y2_ = 0;
  clear_has_y2();
}
inline ::google::protobuf::int32 CarlifeTouchFling::y2() const {
  return y2_;
}
inline void CarlifeTouchFling::set_y2(::google::protobuf::int32 value) {
  set_has_y2();
  y2_ = value;
}

// required float velocityX = 5;
inline bool CarlifeTouchFling::has_velocityx() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CarlifeTouchFling::set_has_velocityx() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CarlifeTouchFling::clear_has_velocityx() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CarlifeTouchFling::clear_velocityx() {
  velocityx_ = 0;
  clear_has_velocityx();
}
inline float CarlifeTouchFling::velocityx() const {
  return velocityx_;
}
inline void CarlifeTouchFling::set_velocityx(float value) {
  set_has_velocityx();
  velocityx_ = value;
}

// required float velocityY = 6;
inline bool CarlifeTouchFling::has_velocityy() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CarlifeTouchFling::set_has_velocityy() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CarlifeTouchFling::clear_has_velocityy() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CarlifeTouchFling::clear_velocityy() {
  velocityy_ = 0;
  clear_has_velocityy();
}
inline float CarlifeTouchFling::velocityy() const {
  return velocityy_;
}
inline void CarlifeTouchFling::set_velocityy(float value) {
  set_has_velocityy();
  velocityy_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace protobuf
}  // namespace carlife
}  // namespace baidu
}  // namespace com

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_CarlifeTouchFlingProto_2eproto__INCLUDED
