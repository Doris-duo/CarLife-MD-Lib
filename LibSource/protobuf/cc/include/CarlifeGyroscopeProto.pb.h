// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CarlifeGyroscopeProto.proto

#ifndef PROTOBUF_CarlifeGyroscopeProto_2eproto__INCLUDED
#define PROTOBUF_CarlifeGyroscopeProto_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace baidu {
namespace carlife {
namespace protobuf {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_CarlifeGyroscopeProto_2eproto();
void protobuf_AssignDesc_CarlifeGyroscopeProto_2eproto();
void protobuf_ShutdownFile_CarlifeGyroscopeProto_2eproto();

class CarlifeGyroscope;

// ===================================================================

class CarlifeGyroscope : public ::google::protobuf::Message {
 public:
  CarlifeGyroscope();
  virtual ~CarlifeGyroscope();

  CarlifeGyroscope(const CarlifeGyroscope& from);

  inline CarlifeGyroscope& operator=(const CarlifeGyroscope& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CarlifeGyroscope& default_instance();

  void Swap(CarlifeGyroscope* other);

  // implements Message ----------------------------------------------

  CarlifeGyroscope* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CarlifeGyroscope& from);
  void MergeFrom(const CarlifeGyroscope& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 gyroType = 1;
  inline bool has_gyrotype() const;
  inline void clear_gyrotype();
  static const int kGyroTypeFieldNumber = 1;
  inline ::google::protobuf::int32 gyrotype() const;
  inline void set_gyrotype(::google::protobuf::int32 value);

  // required double gyroX = 2;
  inline bool has_gyrox() const;
  inline void clear_gyrox();
  static const int kGyroXFieldNumber = 2;
  inline double gyrox() const;
  inline void set_gyrox(double value);

  // required double gyroy = 3;
  inline bool has_gyroy() const;
  inline void clear_gyroy();
  static const int kGyroyFieldNumber = 3;
  inline double gyroy() const;
  inline void set_gyroy(double value);

  // required double gyroZ = 4;
  inline bool has_gyroz() const;
  inline void clear_gyroz();
  static const int kGyroZFieldNumber = 4;
  inline double gyroz() const;
  inline void set_gyroz(double value);

  // optional uint64 timeStamp = 5;
  inline bool has_timestamp() const;
  inline void clear_timestamp();
  static const int kTimeStampFieldNumber = 5;
  inline ::google::protobuf::uint64 timestamp() const;
  inline void set_timestamp(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:com.baidu.carlife.protobuf.CarlifeGyroscope)
 private:
  inline void set_has_gyrotype();
  inline void clear_has_gyrotype();
  inline void set_has_gyrox();
  inline void clear_has_gyrox();
  inline void set_has_gyroy();
  inline void clear_has_gyroy();
  inline void set_has_gyroz();
  inline void clear_has_gyroz();
  inline void set_has_timestamp();
  inline void clear_has_timestamp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  double gyrox_;
  double gyroy_;
  double gyroz_;
  ::google::protobuf::uint64 timestamp_;
  ::google::protobuf::int32 gyrotype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_CarlifeGyroscopeProto_2eproto();
  friend void protobuf_AssignDesc_CarlifeGyroscopeProto_2eproto();
  friend void protobuf_ShutdownFile_CarlifeGyroscopeProto_2eproto();

  void InitAsDefaultInstance();
  static CarlifeGyroscope* default_instance_;
};
// ===================================================================


// ===================================================================

// CarlifeGyroscope

// required int32 gyroType = 1;
inline bool CarlifeGyroscope::has_gyrotype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CarlifeGyroscope::set_has_gyrotype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CarlifeGyroscope::clear_has_gyrotype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CarlifeGyroscope::clear_gyrotype() {
  gyrotype_ = 0;
  clear_has_gyrotype();
}
inline ::google::protobuf::int32 CarlifeGyroscope::gyrotype() const {
  return gyrotype_;
}
inline void CarlifeGyroscope::set_gyrotype(::google::protobuf::int32 value) {
  set_has_gyrotype();
  gyrotype_ = value;
}

// required double gyroX = 2;
inline bool CarlifeGyroscope::has_gyrox() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CarlifeGyroscope::set_has_gyrox() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CarlifeGyroscope::clear_has_gyrox() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CarlifeGyroscope::clear_gyrox() {
  gyrox_ = 0;
  clear_has_gyrox();
}
inline double CarlifeGyroscope::gyrox() const {
  return gyrox_;
}
inline void CarlifeGyroscope::set_gyrox(double value) {
  set_has_gyrox();
  gyrox_ = value;
}

// required double gyroy = 3;
inline bool CarlifeGyroscope::has_gyroy() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CarlifeGyroscope::set_has_gyroy() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CarlifeGyroscope::clear_has_gyroy() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CarlifeGyroscope::clear_gyroy() {
  gyroy_ = 0;
  clear_has_gyroy();
}
inline double CarlifeGyroscope::gyroy() const {
  return gyroy_;
}
inline void CarlifeGyroscope::set_gyroy(double value) {
  set_has_gyroy();
  gyroy_ = value;
}

// required double gyroZ = 4;
inline bool CarlifeGyroscope::has_gyroz() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CarlifeGyroscope::set_has_gyroz() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CarlifeGyroscope::clear_has_gyroz() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CarlifeGyroscope::clear_gyroz() {
  gyroz_ = 0;
  clear_has_gyroz();
}
inline double CarlifeGyroscope::gyroz() const {
  return gyroz_;
}
inline void CarlifeGyroscope::set_gyroz(double value) {
  set_has_gyroz();
  gyroz_ = value;
}

// optional uint64 timeStamp = 5;
inline bool CarlifeGyroscope::has_timestamp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CarlifeGyroscope::set_has_timestamp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CarlifeGyroscope::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CarlifeGyroscope::clear_timestamp() {
  timestamp_ = GOOGLE_ULONGLONG(0);
  clear_has_timestamp();
}
inline ::google::protobuf::uint64 CarlifeGyroscope::timestamp() const {
  return timestamp_;
}
inline void CarlifeGyroscope::set_timestamp(::google::protobuf::uint64 value) {
  set_has_timestamp();
  timestamp_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace protobuf
}  // namespace carlife
}  // namespace baidu
}  // namespace com

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_CarlifeGyroscopeProto_2eproto__INCLUDED
